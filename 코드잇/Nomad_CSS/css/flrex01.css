.wrapper {
  /* display:flex 만 지정해도, inline-block과 같은 속성을 얻음 
    flex 속성은 붙어있는 부모가 자식(children)의 위치를 움직일 수 있음 
    1) flex-direction: row(행, 가로 정렬, 기본 속성), 
      * horizontal axis(수평축), main axis -> justify-content
      * cross axis(수직축, 세로) -> align-items
  
  
  */
  display: flex;
  /* justify-content : 수평축에 있는 flex children의 위치를 변경 -> center 지정 시 가운데 정렬 
     space-between : box 사이에 공간을 주어 배치, space-around : box 사이와의 간격을 모두 같에 배치

     flex-direction: row; 일때, main axis는 가로. justify-content로 가로 제어, align-items로 세로 제어
  */
  justify-content: space-around;

  /* align-items 사용 시 부모(.box의 부모 : .wrapper)의 높이 기준으로 세로 정렬하기 때문에, 높이 지정이 필요함
     align-items : strech; 사용 시, 자식 클래스 높이가 전체로 뻗어나가 채워짐(기본 height 지정이 없다면, 부모 높이까지 채워짐)
     * flex-start : 기본값, flex-end : 맨 밑으로 정렬, center : 부모 높이 기준 세로로 가운데 정렬
  */
  align-items: strech; 
  height: 50vh;
}

.box {
  background: blue;
  width: 200px;
  /* div 기본 속성 : block */
  /* block 속성 유지(box속성, 너비&높이 적용 가능) <-> inline(text, box가 아님) */
  display: inline-block;
  color: white;
}

/* .box:nth-child(n) 과 같이 스타일 지정 가능하나, 다른 화면사이즈에서 디자인이 깨짐 -> flex 사용 */